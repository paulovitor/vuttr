openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Tools
  license:
    name: MIT
servers:
  - url: http://localhost:3000/v1
paths:
  /tools:
    get:
      summary: List all tools
      operationId: listTools
      tags:
        - tools
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - name: tag
          in: query
          description: Tag that want filter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A paged array of tools
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tools"
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Create a tool
      operationId: createTool
      tags:
        - tools
      requestBody:
        description: Tool that will be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolBody'
      responses:
        '201':
          $ref: "#/components/responses/Success"
        default:
          $ref: '#/components/responses/UnexpectedError'
  /tools/{id}:
    get:
      summary: Info for a specific tool
      operationId: showToolById
      tags:
        - tools
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the tool to retrieve
          schema:
            type: string
      responses:
        '200':
          $ref: "#/components/responses/Success"
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      summary: Delete for a specific tool
      operationId: deleteToolById
      tags:
        - tools
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the tool to delete
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
components:
  schemas:
    Tool:
      required:
        - id
        - title
        - link
        - description
        - tags
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        link:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
    ToolBody:
      required:
        - title
        - link
        - description
      properties:
        title:
          type: string
        link:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
    Tools:
      type: array
      items:
        $ref: "#/components/schemas/Tool"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  responses:
    Success:
      description: Expected response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Tool"
    UnexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
